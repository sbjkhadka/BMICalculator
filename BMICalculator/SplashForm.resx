<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="SplashTimer.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAAAAAAAD/7gAOQWRvYmUAZAAAAAAB/9sAQwAGBAQEBQQGBQUGCQYFBgkLCAYG
        CAsMCgoLCgoMEAwMDAwMDBAMDg8QDw4MExMUFBMTHBsbGxwfHx8fHx8fHx8f/9sAQwEHBwcNDA0YEBAY
        GhURFRofHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgB
        4AFAAwERAAIRAQMRAf/EAB0AAQACAwEBAQEAAAAAAAAAAAAFBwQGCAMCAQn/xABCEAACAgECBAQDBQUH
        AgUFAAAAAQIDBBEFITESBkFREwdhIjJxgUIUCKFSYnIjkbHBgpIzFUMk0eGyY4OiU0RFFv/EABoBAQAD
        AQEBAAAAAAAAAAAAAAABAgMEBQb/xAAnEQEBAAIBBAICAgMBAQAAAAAAARECAyExEgRBUWETcTLwkRQi
        Qv/aAAwDAQACEQMRAD8A6pAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABqO5+5uwYWZLGqx8vPUH0zyMSqM6l
        P9xTlOHXL+TUy259JcWt9fW5NpmRNbD3Ps2+VWT2+/qspaWRjWRlVfU3yVlU0pR18Hpo/A012lmYy20u
        txZipQlUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABXXu1u+bFYO0UW30YF7lbvN+NdDGnHH
        im4xlbL5lCUl8yhxa5tR1Of2OTxmPt1+rw+Vz9NUzMLbs2WHjYuNg5NlVqrz77E8l1QlD1IV1Qg4pWTj
        o+rkcEvjHqXXy+ezI37b87A2n/ldiseHvuz1u/ClOTcLIQ+ezFsk/mlRak46S4rg+aJ4eS67/is+fjm+
        mL8LO7K7qwu7O1ds7iwouujcqI3KqTTlXLlOuTXjGSaPWeImgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAeWNk05NSupl1VttRl4Ppej0+9Ea7S9YtvpdbivUlUAAAAFOe6kXmdw420Zsox2XLtlPedX89lFVMX
        TTDg/lnZL5l5HFzf3v30en62fCY/KuMLufLyXn4+HsUtn3jb3CeNuON6kcOWPCyP9LIV/jL8Mo8/gZ7S
        Oq67T5XhvmBh7lgLDyJOFWXV6VsoadcXYtPl10TkmRvjox489Xt7Q9pT7S7Mq2F5NmXXi35DpyLYenNw
        stcknDw01O/j38tcvN59JrtiXLdC7IAAAAH5GcJ69MlLpbi9PBrmiJU2WP0lAAAAAAAAAAAAAAAAAAAA
        AAAAAYm47niYVMndkV0WOL9P1OK15JuK46aldtpF9NLt2jTtw723Ke3yj6cKptOM7qdZOXh/TUtOnX48
        jl357jEd/H6muc3sze2O7e28XY8PFvy/y91VaVld0ZxcZa6ta6NPTXnqX4uXWayZY8/DvtvbhJy747Uj
        /wDsa5fyqcv/AEpml59J8sp63JfhJ4G57fuFHr4ORXkVeMq5KWj8n5feX12m0zGW+l1uLMPWrJx7nJU2
        wscH0zUJKXS/J6ci9imX3KUYxcpNRiubfBEJYGb3DsWDwy8+il8OEpx1+blwLTW1W7SOd/1GdwS2XvLt
        3uPGveRsu4Yl9EbqJ61xyqZRa+ePUk+mXLnwZhy8Of5dfBz+P8NKz/d6e87bDZqMi3Juvugozk/V+bVL
        rfD6Y68I+LMZw3vXTt7MsxO67O7rrbvbDenYpRvW2XqM2/m6o1aRs1XKXDXhyMdf7Sflrtma2/hGfpe9
        xd47h2XI2Pc7JZL2qEFi5EuM41fT6c5atz0/DJ8fA9Kx5NXoQgAAfE8iiE1CdkIzfKMpJN/cyMpxX67a
        ktXOKXxaJRhqa7ipwe486mNsMim112SrhJNx+XRuOnBvh8yOP9vhvfqvRnB+zj1+4ntu3mvcL7YUUzVN
        SWt0+lJyfHpUderlx1OnXfPZx8nFdZ1SBdkAAAAAAAAAAAAAAAAAAAAAAANcztmzN6zpW3zVOHRNwoXS
        +qSXOWj0/F5nPtptvfqOzTl149fvalvY+22VdPrXKxcVPVNa/wAumg/5tUf9m/4a/unZW50/NTBZNfi6
        +Ev9L/wMN/Ws7N+P2tb36IGW1qu1xya3Br8Mk1qc22l17uvXebdi+rHopnbTW4vnNwbi2l56Nam3pyXl
        mf8AK5/dtnFbP8iJWdZjS9WiyVfVHptlU3FzrlwfLT7z38PnM4ad7h97Z2w9rXWVZNtm5ZNn5XCnbOVn
        TKS1laupvXohq4p+JTkvjGnHPKqq273X7yoqjj5GTDcaYpJPNqjOei87U65L7eZjOXZteLVm5PeXZu+w
        sj3Ht+VjyslGfq4trycWM4RcdY1S0lByUuL46jbebTr0TprdbmdW09sYW3Y2HG7sCWw3bxZJRjlbjbL1
        KU1zjGX9NS/mRjt6vl/9Zn12dGvueM/pi/fdt9Oxd05W35VfefujjY1F1VlF2FhKmyOk49M1GGkXJLXT
        guJaetrGd9re1g7PuvY/tztGVm9t25l7jX0wuVioWR6a4TysixLhKX/Soi9OWuprbrPyy/8AVeXbPvx3
        dk77iS3fLWNt2eo0xqgpQlj2TekLHKxyc4Sl8r6vNMa7S3FiNtbJmVadXeXcTd1U86UlOXpVpRinHT6t
        JJJtr942/XGP7a9sLe91jKNdeddCuzV6KXVq3wlJOSk0tfI5vd1s47tr0sdfobS8k12mZXjfs9EpO3rl
        Za9XOVj6238XLVng257voZMTo+KdsjNqMa3NyeiitW2X11tU22kbFt/ZuZJwmoRxVHjrNcX/AJUdWnrb
        fw5d/b1n5ZeR2tuFT9WmUbJxeqcH0v8Asf8Agy14dte3VE9rTa9ejY9ryXfiLqhKuyp+nZCTbfVH4vj/
        AGnVx7eUcPNx+OzLLsgAAAAAAAAAAAAAAAAAAAAAAAAAed2Pj3wcLq42RfhJJ/3jCZbEPn9nbPlVyjXF
        405Rceqt8OPnF6oz/VrmX5jX9+3jdb1laJu/trvGBXK3CnHOpX1V6OE9PNJanbOWV594bFS+4vt9vncd
        WJiYU4Y08Oyd1kctThJqcOlKKS+bxHJr5HHt425V9kex3ecU/RyMHJb/AAO2Vb/+qOhn+mtf2xE5ntr3
        Xs69bP2TKhGP/wCVjp5FX9tPU9PtRS6WLzeVB27ZtF9rdt0IXa6yjJqEvvTcJfsKrJ3tztXufPvhV287
        86evywpTsiv/AJGko/6yZMluO6zts9l/c3cLIZm4YeA8ipJQjuWRG16Lwj0dXQ/tLeFU84xu8/Zv3Qyn
        RmU7TiVuldM5V5tc+qS4xUeC0XAeFPOLO2nb8/JVUKqJXZcoqM6o8oz0XX1S5fVryOu3DjkzW7bJ2Ful
        d3r5t1deq06Y6zkvs5I4/axya+P5d3qW8W3lfps+P2ttdTTnGV0l+++Gv2LQ5tfW0nw6tvb3vzhJUYuN
        QtKao1pfupI2kkc92t7vUlAB8xrhGcpxilKenW1zei0WpGE22zD6JQAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAah7k4dVu1413SvWru0i/FxcZapP7tTXivVlyzorqihTu1b6tGvm04/ebudOY1XptNN/c9H+wjKxkb
        LsuZNTzNuxsmcXrGd9Fdk0/tlFsirRJ4mNGupU0pU0+FVUVCH+mKSIyYTOHiRSXVx+wjKWfk4VGXirDs
        Un6ui4PTReZXPytjphL4uHjYtMKaK4whXFRjolrojK3LWTD2ISAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAa735RZdsi9NazhdCa+5M0471Z8k6K4r4T1108zoc6SxZ66eKfkQlnxS05ELMvHitVoQJvEilFa
        FalKYcPnUvHz+CM9q11jOKLgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACM7n4bDmz8a6/UT/AJH1
        f4FtO6u/ZVN8eiWq8fw+a+B1RyMvCbXDXVS4phMS0OEePFlV2Xh/N8CKJrEWkU29X4IrUpnBXytmWzbV
        lFVgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABDd5T6e19xeun9Jp/e0i2ndXfsrLLrfquzr0rbTg
        34JpeXkdUctfcE6Zyjx4dTWvilxQEzRZGVcXzUlrF/dqVWZmI/mj8fIipTmLJcF4vkVSl8B6xl+37jLZ
        royyq4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA133AscO1cxL8brg/sc0X4+6m/ZoFcIT26uzh1
        NaS+Ca0OiOevzHshdGuD+uEXB6/AlDOwHL0IrlKDa4+RFTEjiW+prw6ZwcVOP3lamJvH5cOPS9Yv+9FV
        k5tz1Un5pGe7XRmFFwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABqnubdXV2rZK2Ua6vWq9SybUYx
        inq3KT0SXAvx91OTsqGz3U7A2adO371uE8K/Ih11WuiyzHnBtrWN1Smny4+Rt5SMprljv3N9uVdCyruX
        C+aS1+aa+/ToJ859q/rv02jb+7e2Mp+ph7vh5FMlr1QtXj9qRW8uv2v+nf6qQ2juPYrL/TjueHK76Yx/
        MVqTX2NoeUvanhtO8bbjdSSb1WvGEuaa+DIQnNqk/njLmtOPmmU3aaVIGbQAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAUt+p/uzZcXsp9vPOr/5bNvpnLb102TeNFtzlbD8MHpw15vgvE0451V2chZG0wtUb
        HGv+vNxom/8AYtkucFJcarPhyZt4qZZO37Ri2OVVb9DOhzxrox/ZLhqXmquUjiU5uHNLr/LTTfJzp+5a
        NxZF49b3kWm9natswp32YsXKyjJerUuuMLJPy4uJT/i4r8NZ7fLPlO7FvHdu0zV2y7zk4cZNP0YyruxZ
        a8oyxr10SX8sos119XWTpn/bHfmu164/0vz2m9wMruOq3F3bGrxN3xov1JUPSi2PV0qca5uU65N/h1a8
        mY8vFdYnSrHOdqAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAa77i90rtXsfed/S1swMaU6FprrdLSF
        S08f6klwJ1maOG9x7j3bf8u7L3H1twyZaK7Py5RVk3H6eHP5fBckjr1v4ZV8VOh02Y19K/L3f7tTS6ZP
        weq5SXgy6p+SVsFTkyc4wWlGYv8Adh5Kf72nmThCQw86yGKsTOm65RWleTGPVVZDzkvwyQl+xkK3HgnK
        6SVfnF9FfHy5akibwM6yXp+hUqqYpKrIsi4peGtVaXXOXgnokaa1Wts2upww7K65ywZWpf1K4RszNYLS
        tpca63Hmvqlr4mknRGVwdre9PbmesTDy8iNV9UI07hffL0pQyNFHWVcoxajOfDXzZ52/BiWyuibrKOdc
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA2ktXwS5sDmD9QvvDRu+R//ACuwWrIw6Ja5WRD5oWXLl0/v
        Rr8P4uPgjbTVW1SdNXQ440NZ2S42S8vM3kZ1m1YGrfB6Lgk9C0RXrHBmuC1XwJQ+ZYGWmunSUeL6f/IY
        Gdt0Ol6X1RjOH0NJNqPwfH9hOpU3i5MYWdUeb5viv2viaSq4TeBuPpzjGOih4avXj97LTYwyszE263e9
        vz73GnAzMiqnPytF1Y8nJRVyfhovPh5leX7idfp1ZFaRS1b0Wmr5nlOl+gAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAABWvvx7jYvaHZuRRTclve6wlj4FUdHKKktLLmvBRi+D89C+k6orjyiqVVXrWL+vZwrj48To
        kUqY2/BjRDrs43T4yZeRVJ1whom0tfEvFa9o+nrxXyrj/aSPvIhCGPO5pLpjqvv4ECHs3OSevH73p/cR
        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
        AAAAAAAAAAAf/9k=
</value>
  </data>
</root>